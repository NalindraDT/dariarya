<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Http;

class {{className}}Controller extends Controller
{
    protected $baseUrl;

    public function __construct()
    {
        $this->baseUrl = 'http://localhost:8080';
    }

    public function index()
    {
        try {
            $response = Http::get("{$this->baseUrl}/{{resource}}");
            $data = $response->json();

            return view('admin.{{resource}}.index', ['{{resource}}' => $data]);
        } catch (\Exception $e) {
            return back()->with('error', 'Failed to fetch data: ' . $e->getMessage());
        }
    }

    public function create()
    {
        return view('admin.{{resource}}.create');
    }

    public function store(Request $request)
    {
        $request->validate([
            {{validationRules}}
        ]);

        try {
            Http::asForm()->post("{$this->baseUrl}/{{resource}}", $request->only([{{requestFields}}]));

            return redirect()->route('{{resource}}.index')->with('success', '{{className}} berhasil ditambahkan');
        } catch (\Exception $e) {
            return back()->with('error', 'Failed to add data: ' . $e->getMessage())->withInput();
        }
    }

    public function edit($id)
    {
        try {
            $response = Http::get("{$this->baseUrl}/{{resource}}/{$id}");
            $data = $response->json();

            return view('admin.{{resource}}.edit', ['{{resource}}' => $data]);
        } catch (\Exception $e) {
            return back()->with('error', 'Failed to fetch data: ' . $e->getMessage());
        }
    }

    public function update(Request $request, $id)
    {
        $request->validate([
            {{validationRules}}
        ]);

        try {
            Http::asForm()->put("{$this->baseUrl}/{{resource}}/{$id}", $request->only([{{requestFields}}]));

            return redirect()->route('{{resource}}.index')->with('success', '{{className}} berhasil diperbarui');
        } catch (\Exception $e) {
            return back()->with('error', 'Failed to update data: ' . $e->getMessage())->withInput();
        }
    }

    public function destroy($id)
    {
        try {
            Http::delete("{$this->baseUrl}/{{resource}}/{$id}");

            return redirect()->route('{{resource}}.index')->with('success', '{{className}} berhasil dihapus');
        } catch (\Exception $e) {
            return back()->with('error', 'Failed to delete data: ' . $e->getMessage());
        }
    }
}
